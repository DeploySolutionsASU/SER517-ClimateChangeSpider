package com.deploysolutions.searchApp;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;
import com.amazonaws.services.dynamodbv2.document.Table;
import com.amazonaws.services.dynamodbv2.model.Select;
import com.amazonaws.services.dynamodbv2.document.spec.QuerySpec;
import com.amazonaws.services.dynamodbv2.document.ItemCollection;
import com.amazonaws.services.dynamodbv2.document.QueryOutcome;

import com.amazonaws.regions.Regions;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

@Path("search")
public class SearchControler {
	
	 @GET
	    @Produces(MediaType.APPLICATION_JSON)
	    public Response getStatus() {

		 // This client will default to US West (Oregon)
		 AmazonDynamoDB client = AmazonDynamoDBClientBuilder.standard()
		 .withRegion(Regions.US_WEST_2)
		 .build();  
		 
		 //DynamoDB Client
		 DynamoDB dynamoDB = new DynamoDB(client);
		 
		 Table table = dynamoDB.getTable("FileDownloads");
		 
		QuerySpec spec = new QuerySpec().withFilterExpression("#s = :state and #t = :type");
		spec.withSelect(Select.COUNT);
		ItemCollection<QueryOutcome> items = table.query(spec);
		return items.getTotalCount();	    }

}
